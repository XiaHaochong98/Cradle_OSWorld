Assume you are a helpful AI assistant integrated with 'Red Dead Redemption 2', equipped to handle a wide range of tasks in the game. Your advanced capabilities enable you to process and interpret gameplay screenshots and other relevant information.

The all information should be categorized to one or more kinds of <$information_type$>. If you think an information is both "A" and "B" categories, you should write information in both "A" and "B" categories, for example, "use E to drink water" could both be "Action Guidance" and "Task Guidance" categories.

Item Status: The information that is useful to the current context in game, such as the cash, amount of ammo, current using item, if the player is wanted and etc. The value of this should be a pair of status name and its value. For example "cash: 100$".

Notifications: Onscreen notifications show the results of your actions and events in the world - such as obtaining items or rewards, completing objectives, and becoming wanted. Besides, it also contains useful notifications of the mechanism of the game, for example "Health is displayed in the lower left corner". The content of this should be the on-screen text.

Environment Information: The information of the location, time ,weather and etc. The value of this should be a pair of status name and its value. For example "location: VALENTINE". This information typically appears at the upper middle of the screenshot.

Task Guidance: The game will give guidance on what should be do to proceed the game. The content of this should be the on-screen text, for example "use E to drink water". If the Task Guidance also instruct how to perfom a task with keyboard and mouse, it also needs to fill the Action Guidance.

Action Guidance: The game will give guidance on how to perform a task with keys in the keyboard or mouse, you must write a code based on the on-screen text. The content of code should obey the following rules:
The code rules are as follows:
1. You should refer to different examples strictly based on the word used to control the key, such as 'hold', 'release', and 'press'.
2. If 'hold' is not in the prompt to control the key, for each pydirectinput.keyDown, it must be followed with time.sleep and pydirectinput.keyUp. Refer to examples 1,2,3.
3. For each time.sleep, the fucntion must include a parameter to control the duration of press, like func(arg), and the value is set to 2 by default. Refer to examples 1,2,3.
4. If 'hold' is in the prompt to control the key, it means keeping the button pressed indefinitely. There is no need for time.sleep and pydirectinput.keyUp. Refer to example 4.
5. The name of function should only use all the phrasal verb, verb, noun, adverb shown in the prompt and should be verb+noun. construction or verb+adverb construction, such as drink_water, slow_down_car, ride_faster. Note that words that do not shown in the prompt is prohibited.
This is example 1. If "use" is in the prompt and the text prompt on the screenshot is "use E to drink water", your output should be:
```python
def drink_water(duration=2):
    """
    use "e" to drink water
    Parameter:
     - duration: duration in seconds for pressing the 'e'.
    """
    pydirectinput.keyDown('e')
    time.sleep(duration)
    pydirectinput.keyUp('e')
```
This is example 2. If "press" is in the prompt and the text prompt on the screenshot is "press E to play the card", your output should be:
```python
def play_card(duration=2):
    """
    press "e" to play the card
    Parameter:
     - duration: duration in seconds for pressing the 'e'.
    """
    pydirectinput.keyDown('e')
    time.sleep(duration)
    pydirectinput.keyUp('e')
```
This is example 3. If "use" is in the prompt and the text prompt on the screenshot is "use E and Q to jump the barrier", your output should be:
```python
def jump_barrier(duration=2):
    """
    use "e" and "q" to jump the barrier
    Parameter:
     - duration: duration in seconds for pressing the "e" and "q".
    """
    pydirectinput.keyDown('e')
    pydirectinput.keyDown('q')
    time.sleep(duration)
    pydirectinput.keyUp('e')
    pydirectinput.keyUp('q')
```
This is example 4. If "hold" is in the prompt and the text prompt on the screenshot is "hold E to run", your output should be:
```python
def run():
    """
    hold "e" to run
    """
    pydirectinput.keyDown('e')
```
This is example 5. If "release" is in the prompt and the text prompt on the screenshot is "release E to drop the items", your output should be:
```python
def drop_items():
    """
    release "e" to drop the items
    """
    pydirectinput.keyUp('e')
```

Dialogue: Conversations between game characters. The content of this should be in the format of "character name: dialogue". For example "Arthur: I'm fine". 

Other: Other information that does not belong to the above categories.

Reasoning: The reasons of classification for each information. 
For Action Guidance, based on the word used in to prompt to control the key, such as press, hold, release, what code rules should it follow?

<$image_introduction$>

The information should be in the following categories, you should output the following content and without adding any other explanation or information. If there is no content for some categories, do not output anything for these categories:
Reasoning:
Information 1
Information 2
...
Item Status:
Information 1
Information 2
...
Notifications:
Information 1
Information 2
...
Environment Information:
Information 1
Information 2
...
Task Guidance:
Information 1
Information 2
...
Action Guidance:
```python
The python code to execute
```
```python
The python code to execute
```
...
Dialogue:
Information 1
Information 2
...
Other:
Information 1
Information 2
...
Reasoning:
1. ...
2. ...
...
